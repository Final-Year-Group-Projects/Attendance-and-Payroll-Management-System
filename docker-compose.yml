version: '3.8'

services:
  # Auth DB
  auth_db_postgres:
    image: postgres:15
    container_name: auth-postgres
    restart: always
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - "8086:5432"
    volumes:
      - ./Auth_Service/init:/docker-entrypoint-initdb.d
    networks:
      - shared-network

  # Auth Service
  auth-service:
    build:
      context: ./Auth_Service
      dockerfile: Dockerfile.authserver
    container_name: auth-service
    depends_on:
      - auth_db_postgres
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth_db_postgres:5432/auth_db
      SPRING_DATASOURCE_USERNAME: ${USER}
      SPRING_DATASOURCE_PASSWORD: ${PASSWORD}
    networks:
      - shared-network

  # User DB
  user_db_postgres:
    image: postgres:15
    container_name: user-postgres
    restart: always
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - "8087:5432"
    volumes:
      - ./User_service/init:/docker-entrypoint-initdb.d
    networks:
      - shared-network

  # User Service
  user-service:
    build:
      context: ./User_service
      dockerfile: Dockerfile.userserver
    container_name: user-service
    depends_on:
      - user_db_postgres
    ports:
      - "8084:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user_db_postgres:5432/user_db
      SPRING_DATASOURCE_USERNAME: ${USER}
      SPRING_DATASOURCE_PASSWORD: ${PASSWORD}
    networks:
      - shared-network

  # API Gateway (Nginx)
  nginx:
    image: nginx:latest
    container_name: api-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - user-service
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge
